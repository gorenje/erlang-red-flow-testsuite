[{"id":"789a7d7140b6d7a4","type":"tab","label":"[.breadboard] scanning all flows for nodes","disabled":false,"info":"## Flow scanning\n\nScan all flow files for a particular node configuration.\n\nHere I'm looking for all assert success nodes that don't have a count value configured.\n\n","env":[{"name":"ERED_PENDING","value":"false","type":"bool"}]},{"id":"5fe3d9322a13a03f","type":"inject","z":"789a7d7140b6d7a4","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":133.71429443359375,"y":311.5714111328125,"wires":[["5f5cbf45df7cc40b"]]},{"id":"5f5cbf45df7cc40b","type":"exec","z":"789a7d7140b6d7a4","command":"ls priv/testflows","addpay":"","append":"","useSpawn":"true","timer":"","winHide":false,"oldrc":false,"name":"","x":511,"y":313,"wires":[["6c7ee3879bc1956e"],[],[]]},{"id":"2d5a6c91a73e2d5a","type":"split","z":"789a7d7140b6d7a4","name":"","splt":"\\n","spltType":"str","arraySplt":"17","arraySpltType":"len","stream":false,"addname":"","property":"payload","x":763,"y":567.3973236083984,"wires":[["88c2518380e8fd3f"]]},{"id":"88c2518380e8fd3f","type":"change","z":"789a7d7140b6d7a4","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"$trim($toString($$.payload))","tot":"jsonata"},{"t":"set","p":"flowid","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1179,"y":567.3973236083984,"wires":[["704d19a394f1debe"]]},{"id":"6c7ee3879bc1956e","type":"switch","z":"789a7d7140b6d7a4","name":"","property":"$length($$.payload)","propertyType":"jsonata","rules":[{"t":"gt","v":"10","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":671,"y":706.8794555664062,"wires":[["49464c64ec47dbd2"]]},{"id":"704d19a394f1debe","type":"switch","z":"789a7d7140b6d7a4","name":"","property":"$length($$.payload)","propertyType":"jsonata","rules":[{"t":"eq","v":"16","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":855,"y":424.4151611328125,"wires":[["8d8bfb8384244635"]]},{"id":"e0ffe560c09c96e9","type":"debug","z":"789a7d7140b6d7a4","name":"debug 5","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"parts.index","targetType":"msg","statusVal":"","statusType":"counter","x":2155,"y":761.5000610351562,"wires":[]},{"id":"8d8bfb8384244635","type":"change","z":"789a7d7140b6d7a4","name":"","rules":[{"t":"set","p":"filename","pt":"msg","to":"$toString($privdir() & \"/testflows/\" & $$.payload & \"/flows.json\")","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1122,"y":424.4151611328125,"wires":[["933725060fcbed8d"]]},{"id":"49464c64ec47dbd2","type":"change","z":"789a7d7140b6d7a4","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"$trim($toList($$.payload))","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1237,"y":706.8794555664062,"wires":[["2d5a6c91a73e2d5a"]]},{"id":"933725060fcbed8d","type":"file in","z":"789a7d7140b6d7a4","name":"","filename":"filename","filenameType":"msg","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":999,"y":265.3125,"wires":[["5718ae424030eda7"]]},{"id":"2d8649b52824e005","type":"json","z":"789a7d7140b6d7a4","name":"","property":"payload","action":"","pretty":false,"x":1563,"y":168.0714111328125,"wires":[["9c0a0ba9e5d3afde"]]},{"id":"9c0a0ba9e5d3afde","type":"function","z":"789a7d7140b6d7a4","name":"filter on assert success nodes without count value","func":"#{ <<\"payload\">> := Payload } = Msg,\nMsg#{ \n      <<\"payload\">> => lists:filter( \n            fun( #{ <<\"type\">> := <<\"ut-assert-success\">>, <<\"count\">> := _Count } ) -> false; \n                ( #{ <<\"type\">> := <<\"ut-assert-success\">> } ) -> true; \n                (_) -> false end, \n            Payload) }\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1855,"y":452.50006103515625,"wires":[["0f1e64473122e326"]]},{"id":"0f1e64473122e326","type":"switch","z":"789a7d7140b6d7a4","name":"payload contains at least one node?","property":"$count($$.payload)","propertyType":"jsonata","rules":[{"t":"gt","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":1907.142822265625,"y":594.5000610351562,"wires":[["e0ffe560c09c96e9","c8e162f01da6ac87"]]},{"id":"5718ae424030eda7","type":"change","z":"789a7d7140b6d7a4","name":"","rules":[{"t":"set","p":"original_file_contents","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"autoimport","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":1309,"y":168.69195556640625,"wires":[["2d8649b52824e005"]]},{"id":"464314c99f05a25e","type":"ClientCode","z":"789a7d7140b6d7a4","name":"TriggerImport","clientcode":"function doIt() {\n  var content = msg.original_file_contents;\n\n  if (content.length == 0) {\n    RED.notify(\"No new content\", {\n      type: \"ok\",\n      id: \"TriggerImport\",\n      timeout: 2000\n    });\n    return;\n  }\n  RED.clipboard.import();\n\n  setTimeout(() => {\n    $('#red-ui-clipboard-dialog-import-text').val(\n      content\n    ).trigger(\"paste\");\n\n    if (msg.autoimport) {\n      setTimeout(() => {\n        $('#red-ui-clipboard-dialog-ok').trigger('click');\n        node.send({ payload: \"ok\"})\n      }, 435);\n    } else {\n      node.send({ payload: \"ok\" })\n    }\n  }, 300);\n};\n\ndoIt();\n","format":"javascript","x":2730,"y":361,"wires":[[]]},{"id":"c8e162f01da6ac87","type":"function","z":"789a7d7140b6d7a4","name":"pass through only the first message","func":"#{ '_mc_incoming' := MsgCount } = NodeDef,\n\ncase MsgCount of \n    1 ->\n        Msg;\n    _ ->\n        undefined\nend\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2412,"y":237,"wires":[["05a432d4a407505c","464314c99f05a25e"]]},{"id":"05a432d4a407505c","type":"debug","z":"789a7d7140b6d7a4","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2743,"y":131,"wires":[]}]