[{"id":"8f1ed58b183fe5d3","type":"tab","label":"[binary] initial test","disabled":false,"info":"## Testing for the binary node\n\nDefined as contrib node [node-red-contrib-binary](https://flows.nodered.org/node/node-red-contrib-binary) which in turn uses the [packet](https://bigeasy.github.io/packet) package.\n\nHas a simple definition language that we can take advantage of.\n\nThere is another node for doing this but I find that too *visual* --> [node-red-contrib-buffer-parser](https://flows.nodered.org/node/node-red-contrib-buffer-parser) --> it has toooooo many options and it's more difficult to make a quick test.\n\nEach to their own, but for me, it's the expressiveness and simplicity of Packet.\n","env":[]},{"id":"95be26080aefc355","type":"binary","z":"8f1ed58b183fe5d3","name":"Four bit computing inside a binary structure","property":"payload","pattern":"x8, \nb8 => value, \nb8 => value2, \nb16 => value3,\nb32{b8 =>f1, b16=> f2, b4 => f3, b4 =>f4 },\nb8 => last","x":888,"y":514.5,"wires":[["a0b60cfbbc32db66","90e010f251e0c0d8"]]},{"id":"78867efdeba2cc53","type":"inject","z":"8f1ed58b183fe5d3","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"[255,234,212,213,124,221,123,231,231,231]","payloadType":"bin","x":547,"y":374,"wires":[["95be26080aefc355"]]},{"id":"a0b60cfbbc32db66","type":"ut-assert-values","z":"8f1ed58b183fe5d3","name":"","ignore_failure_if_succeed":false,"rules":[{"t":"eql","p":"payload.value","pt":"msg","to":"234","tot":"num"},{"t":"eql","p":"payload.value2","pt":"msg","to":"212","tot":"num"},{"t":"eql","p":"payload.value3","pt":"msg","to":"54652","tot":"num"},{"t":"eql","p":"payload.f1","pt":"msg","to":"0xdd","tot":"num"},{"t":"eql","p":"payload.f2","pt":"msg","to":"0x7be7","tot":"num"},{"t":"eql","p":"payload.f3","pt":"msg","to":"0xE","tot":"num"},{"t":"eql","p":"payload.f4","pt":"msg","to":"0x7","tot":"num"},{"t":"eql","p":"payload.last","pt":"msg","to":"231","tot":"num"}],"x":1330,"y":514.5,"wires":[[]]},{"id":"92c658f48ba49e2d","type":"binary","z":"8f1ed58b183fe5d3","name":"array collection","property":"payload","pattern":"x8, \nb8[3] => value,\nb16{b4 => f1,b12 => f2},\nb16{b6 => f3,b10 => f4}","x":789,"y":738,"wires":[["c3edf17855f8d494","69204c5eb3eb248f"]]},{"id":"09c439e11ee1c193","type":"inject","z":"8f1ed58b183fe5d3","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"[255,234,212,213,124,221,123,231,231,231]","payloadType":"bin","x":538,"y":597.5,"wires":[["92c658f48ba49e2d"]]},{"id":"c3edf17855f8d494","type":"ut-assert-values","z":"8f1ed58b183fe5d3","name":"","ignore_failure_if_succeed":false,"rules":[{"t":"eql","p":"payload.value[0]","pt":"msg","to":"234","tot":"num"},{"t":"eql","p":"payload.value[1]","pt":"msg","to":"212","tot":"num"},{"t":"eql","p":"payload.value[2]","pt":"msg","to":"213","tot":"num"},{"t":"eql","p":"payload.f1","pt":"msg","to":"7","tot":"num"},{"t":"eql","p":"payload.f2","pt":"msg","to":"3293","tot":"num"},{"t":"eql","p":"payload.f3","pt":"msg","to":"30","tot":"num"},{"t":"eql","p":"payload.f4","pt":"msg","to":"999","tot":"num"}],"x":1121,"y":738,"wires":[[]]},{"id":"90e010f251e0c0d8","type":"ut-assert-values","z":"8f1ed58b183fe5d3","name":"binary sets original attribute","ignore_failure_if_succeed":false,"rules":[{"t":"eql","p":"original","pt":"msg","to":"[255,234,212,213,124,221,123,231,231,231]","tot":"bin"}],"x":1331,"y":436,"wires":[[]]},{"id":"69204c5eb3eb248f","type":"ut-assert-values","z":"8f1ed58b183fe5d3","name":"binary sets original attribute","ignore_failure_if_succeed":false,"rules":[{"t":"eql","p":"original","pt":"msg","to":"[255,234,212,213,124,221,123,231,231,231]","tot":"bin"}],"x":1340,"y":657,"wires":[[]]}]