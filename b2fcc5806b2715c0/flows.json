[{"id":"b2fcc5806b2715c0","type":"tab","label":"[inject] JSONata undefined value & exceptions","disabled":false,"info":"## Attribute not set \n\nIf JSONata result is undefined, i.e., there is no result, then don't set the attribute on the message object.\n\nAlso a second test is for the handling of incorrect JSONata stanzas. These should raise exceptions and ideally inform the user of what's wrong.\n","env":[]},{"id":"4d3d566772e6b3f9","type":"group","z":"b2fcc5806b2715c0","name":"trigger test for Node-RED","style":{"label":true},"nodes":["de71f4941298f543","07d6bdcb7df0d815"],"x":68,"y":62,"w":243,"h":125},{"id":"1265b4c557c7dd06","type":"inject","z":"b2fcc5806b2715c0","name":"","props":[{"p":"payload"},{"p":"matchresult","v":"$match($$.payload, /([0-9]+)([a-z]+)([0-9]+)([a-z]+)/,0)","vt":"jsonata"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"111","payloadType":"str","x":511,"y":332,"wires":[["1dc440ea7f7b4753"]]},{"id":"1dc440ea7f7b4753","type":"ut-assert-values","z":"b2fcc5806b2715c0","name":"","ignore_failure_if_succeed":false,"rules":[{"t":"notset","p":"matchresult","pt":"msg"},{"t":"eql","p":"payload","pt":"msg","to":"111","tot":"str"}],"x":724,"y":376,"wires":[[]]},{"id":"13856856d2486190","type":"inject","z":"b2fcc5806b2715c0","name":"","props":[{"p":"payload"},{"p":"matchresult","v":"$match($$.payload, /./,-1)","vt":"jsonata"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"111","payloadType":"str","x":371,"y":528,"wires":[["3c34ef77a739bce7"]]},{"id":"3c34ef77a739bce7","type":"ut-assert-failure","z":"b2fcc5806b2715c0","name":"","x":714,"y":604,"wires":[]},{"id":"de71f4941298f543","type":"ClientCode","z":"b2fcc5806b2715c0","g":"4d3d566772e6b3f9","name":"","clientcode":"if ( msg._ws ) { /* ignore - Erlang-Red does its own triggering of tests */ }\nelse {\n    RED.notify(\"restarting flow\", { type: \"info\" });\n    RED.actions.invoke(\"core:restart-flows\")\n    setTimeout( () => {\n        RED.notify(\"starting test\", { type: \"info\" });\n        RED.search.search(\"type:inject flow:current\").map( d => d.node ).filter( d => d._def.label.call(d) != \"trigger test\").forEach( d => RED.view.clickNodeButton(d)) \n    }, 2500)\n}","format":"javascript","x":215,"y":146,"wires":[[]]},{"id":"07d6bdcb7df0d815","type":"inject","z":"b2fcc5806b2715c0","g":"4d3d566772e6b3f9","name":"trigger test","props":[],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":174,"y":103,"wires":[["de71f4941298f543"]]},{"id":"0500f6965adc138b","type":"ut-assert-success","z":"b2fcc5806b2715c0","name":"","count":1,"x":714,"y":535,"wires":[]},{"id":"e9d5b58bbe051808","type":"catch","z":"b2fcc5806b2715c0","name":"","scope":null,"uncaught":false,"x":433,"y":488,"wires":[["0500f6965adc138b"]]}]