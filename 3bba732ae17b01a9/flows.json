[{"id":"3bba732ae17b01a9","type":"tab","label":"[function] speaks Erlang","disabled":false,"info":"I guess would be an ErlangRED only test. But it's the function node now styled in Erlang code.\n\nThe assert debug nodes don't get the debug messages because they are generated outside of the normal testing scope, i.e. before the debug exchange is created and after it has been checked.","env":[]},{"id":"8635e881fe0a171d","type":"inject","z":"3bba732ae17b01a9","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":286,"y":256,"wires":[["f9fb40d63b894db4"]]},{"id":"f9fb40d63b894db4","type":"function","z":"3bba732ae17b01a9","name":"function 2","func":"%% Code is called in a function wrapper:\n%%     fun (NodeDef, Msg) -> .... end.\n%% and must return a Msg map.\n\nmaps:put(payload, \"hello world\", Msg)\n","outputs":1,"timeout":0,"noerr":0,"initialize":"%% Code added here will be run once\n%% whenever the node is started.\n%% This gets wrapped in a function definition:\n%%   fun (NodeDef,Msg) -> ... end\n%% and must return a NodeDef map.\n\nered_nodered_comm:send_out_debug_msg(NodeDef, Msg, <<\"function started\">>, normal),\n\nNodeDef\n","finalize":"%% Code added here will be run once\n%% whenever the node is started.\n%% This gets wrapped in a function definition:\n%%   fun (NodeDef,Msg) -> ... end\n%% and must return a NodeDef map.\n\nered_nodered_comm:send_out_debug_msg(NodeDef, Msg, <<\"function stopped\">>, warning),\n\nNodeDef\n","libs":[],"x":514,"y":348,"wires":[["91c695565075cf5b"]]},{"id":"23e85cfc9328671d","type":"ut-assert-debug","z":"3bba732ae17b01a9","name":"","nodeid":"f9fb40d63b894db4","msgtype":"warning","inverse":true,"x":517,"y":449.5,"wires":[]},{"id":"93e6f03504be7e07","type":"ut-assert-debug","z":"3bba732ae17b01a9","name":"","nodeid":"f9fb40d63b894db4","msgtype":"normal","inverse":true,"x":554,"y":513,"wires":[]},{"id":"91c695565075cf5b","type":"ut-assert-values","z":"3bba732ae17b01a9","name":"","rules":[{"t":"eql","p":"payload","pt":"msg","to":"hello world","tot":"str"}],"x":814,"y":346.5,"wires":[[]]}]