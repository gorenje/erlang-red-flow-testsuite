[{"id":"2990f23c277c4133","type":"tab","label":"[.breadboard] serve up PNG without Exif data","disabled":false,"info":"## Server PNG image without Exif data\n\nThis breadboard is based on the [binary test](https://flows.red-erik.org/f/fbd5864f413917b8) for parsing a test PNG image.\n\nThe central component is the <a class=\"ahl-node-only\" data-ids=\"1e8b4f3db4c9edbd,05b67650b2428f2c\">binary node</a> to parse binary PNG content.\n\n[Packet defintion](https://bigeasy.github.io/packet/) language is used as specification of the binary format. This has two advantages, one simplifying the [Erlang binary matching](https://www.erlang.org/doc/system/binaryhandling.html) syntax and also providing a common specification language that is shared between Erlang-Red and Node-RED.\n\nThe binary node is based on the original [Node-RED contrib node](https://flows.nodered.org/node/node-red-contrib-binary) thus the Packet specification can already be used in Node-RED.\n\nErlang-Red uses the [packet type parser](https://github.com/gorenje/erlang-red-type-parsers?tab=readme-ov-file#4-packet-type-parser) to transform the packet defintion language to Erlang binary matcher syntax.\n\n## Setup\n\nA single <a class=\"ahl-node-only\" data-ids=\"2da2870f5bbda5e6\">test png image</a> is used to demonstrate parsing and chunk removal. A generalisation of this breadboard would be to add an HTTP upload flow to dynamically remove Exif details from PNGs uploaded to a server.\n\nA <a class=\"ahl-node-only\" data-ids=\"c8a15b9e5771f0c0\">HTTP endpoint</a> serves up the modified PNG image. The endpoint available under the `/2990f23c277c4133/image.png` path.\n\n## How does it work?\n\nStep one <a class=\"ahl-group-only\" data-ids=\"c0fb9cc1bbc9cc19\">de-headerisation</a> is decoded from Base64 and the PNG header is removed. For more details, see the [png specification over at kaitai](https://github.com/kaitai-io/kaitai_struct_formats/blob/34aa005a07c1fdf47ac385cca91ea590c4ec2ea1/image/png.ksy). The header is stored for later upcycling.\n\nSecond step is the <a class=\"ahl-group-only\" data-ids=\"41b3f48abdb8fdd3\">de-chunkification</a> and generating individual messages for each chunk contained in the PNG image. Each chunk has a `parts.index` assigned so that the <a class=\"ahl-node-only\" data-ids=\"b840a383cdefece0\">join all chunks until complete</a> node can collect them all together. It does this until the final chunk containing a `complete = true` is received. Additionally this final message is <a class=\"ahl-node-only\" data-ids=\"1ae1caf03e74f76c\">delayed</a> to ensure that all other messages are received first. Even though this should be the case automagically as the PNG image is sequentially dechunked.\n\nThird step is the <a class=\"ahl-group-only\" data-ids=\"130b981dd6b18cdb\">re-chunkification</a> of PNG data including the readding of the PNG header to the final data stream.\n\n## Why does this not work with Node-RED?\n\nI have made a number of modifications to the existing nodes to make them - for me - more useful:\n\n- <a class=\"ahl-node-only\" data-ids=\"2da2870f5bbda5e6\">template node</a> understands base64 and can decode base64 data\n- <a class=\"ahl-node-only\" data-ids=\"1e8b4f3db4c9edbd\">binary node</a> understands references to variables defined in the specifications\n- <a class=\"ahl-node-only\" data-ids=\"4575fe048ca1a720\">http response</a> node handles an array of data points, concating the data into a single stream\n\nthese changes simplify the flow.\n","env":[{"name":"ERED_PENDING","value":"true","type":"bool"}]},{"id":"130b981dd6b18cdb","type":"group","z":"2990f23c277c4133","name":"re-chunkification","style":{"label":true},"nodes":["0a061208d9a044f5","29e091d7169c3ceb","fcae16947192b808","4ccef791f80a5f12","b840a383cdefece0","1ae1caf03e74f76c"],"x":1652.000244140625,"y":161.5,"w":1458,"h":160},{"id":"c0fb9cc1bbc9cc19","type":"group","z":"2990f23c277c4133","name":"de-headerisation","style":{"label":true},"nodes":["2da2870f5bbda5e6","05b67650b2428f2c","a4fe83ab4cb1a9a9"],"x":701.5,"y":258.49993896484375,"w":332,"h":225},{"id":"41b3f48abdb8fdd3","type":"group","z":"2990f23c277c4133","name":"de-chunkification","style":{"label":true},"nodes":["1e8b4f3db4c9edbd","164907d0b4a2c917","440bcc95de185ce1"],"x":994,"y":639.5,"w":645,"h":266},{"id":"2da2870f5bbda5e6","type":"template","z":"2990f23c277c4133","g":"c0fb9cc1bbc9cc19","name":"test png image","field":"payload","fieldType":"msg","format":"handlebars","syntax":"plain","template":"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","output":"base64","x":807.5,"y":299.49993896484375,"wires":[["05b67650b2428f2c"]]},{"id":"05b67650b2428f2c","type":"binary","z":"2990f23c277c4133","g":"c0fb9cc1bbc9cc19","name":"skim off png header","property":"payload","pattern":"b64{ x8 => 0x89,\nx8 => 0x50,\nx8 => 0x4E,\nx8 => 0x47,\n\nx8 => 0x0D,\nx8 => 0x0A,\nx8 => 0x1A,\nx8 => 0x0A } => header\n","x":827.5,"y":370.99993896484375,"wires":[["a4fe83ab4cb1a9a9"]]},{"id":"a4fe83ab4cb1a9a9","type":"change","z":"2990f23c277c4133","g":"c0fb9cc1bbc9cc19","name":"store png_header and set count = 0","rules":[{"t":"set","p":"png_header","pt":"msg","to":"payload.header","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"rest","tot":"msg"},{"t":"set","p":"count","pt":"msg","to":"0","tot":"num"},{"t":"set","p":"parts","pt":"msg","to":"{ \"index\" : $$.count }","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":867.5,"y":442.49993896484375,"wires":[["1e8b4f3db4c9edbd"]]},{"id":"1e8b4f3db4c9edbd","type":"binary","z":"2990f23c277c4133","g":"41b3f48abdb8fdd3","name":"read chunk","property":"payload","pattern":"b32         => length,\nb8[4]       => type,\nb8[$length] => data,\nb32         => crc","x":1323,"y":680.5,"wires":[["164907d0b4a2c917","0a061208d9a044f5"]]},{"id":"164907d0b4a2c917","type":"change","z":"2990f23c277c4133","g":"41b3f48abdb8fdd3","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"rest","tot":"msg"},{"t":"set","p":"count","pt":"msg","to":"$$.count + 1","tot":"jsonata"},{"t":"set","p":"parts","pt":"msg","to":"{ \"index\": $$.count }","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1100,"y":864.5,"wires":[["440bcc95de185ce1"]]},{"id":"440bcc95de185ce1","type":"switch","z":"2990f23c277c4133","g":"41b3f48abdb8fdd3","name":"is there data left?","property":"payload","propertyType":"msg","rules":[{"t":"nempty"}],"checkall":"false","repair":false,"outputs":1,"x":1523,"y":864.5,"wires":[["1e8b4f3db4c9edbd"]]},{"id":"0a061208d9a044f5","type":"change","z":"2990f23c277c4133","g":"130b981dd6b18cdb","name":"","rules":[{"t":"set","p":"payload.type","pt":"msg","to":"$toString($$.payload.type)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1778.000244140625,"y":259.5,"wires":[["fcae16947192b808"]]},{"id":"29e091d7169c3ceb","type":"switch","z":"2990f23c277c4133","g":"130b981dd6b18cdb","name":"drop eXIf and iTXt","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"IDAT","vt":"str"},{"t":"eq","v":"iCCP","vt":"str"},{"t":"eq","v":"IHDR","vt":"str"},{"t":"eq","v":"IEND","vt":"str"}],"checkall":"false","repair":false,"outputs":4,"x":2565.000244140625,"y":265.5,"wires":[["b840a383cdefece0"],["b840a383cdefece0"],["b840a383cdefece0"],["b840a383cdefece0"]]},{"id":"fcae16947192b808","type":"switch","z":"2990f23c277c4133","g":"130b981dd6b18cdb","name":"","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"IEND","vt":"str"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":1971.000244140625,"y":259.5,"wires":[["4ccef791f80a5f12"],["29e091d7169c3ceb"]]},{"id":"4ccef791f80a5f12","type":"change","z":"2990f23c277c4133","g":"130b981dd6b18cdb","name":"","rules":[{"t":"set","p":"complete","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":2142.000244140625,"y":202.5,"wires":[["1ae1caf03e74f76c"]]},{"id":"b840a383cdefece0","type":"join","z":"2990f23c277c4133","g":"130b981dd6b18cdb","name":"join all chunks until complete","mode":"custom","build":"array","property":"","propertyType":"full","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2964.000244140625,"y":265.5,"wires":[["d8ca6326d92e7f3e"]]},{"id":"d8ca6326d92e7f3e","type":"sort","z":"2990f23c277c4133","name":"sort by parts.index","order":"ascending","as_num":true,"target":"payload","targetType":"msg","msgKey":"payload","msgKeyType":"elem","seqKey":"parts.index","seqKeyType":"msg","x":2994.000244140625,"y":565,"wires":[["015febf943052ecf"]]},{"id":"c8a15b9e5771f0c0","type":"http in","z":"2990f23c277c4133","name":"","url":"/2990f23c277c4133/image.png","method":"get","upload":false,"swaggerDoc":"","x":161,"y":84,"wires":[["2da2870f5bbda5e6"]]},{"id":"4575fe048ca1a720","type":"http response","z":"2990f23c277c4133","name":"","statusCode":"","headers":{},"x":3728.000244140625,"y":864.5,"wires":[]},{"id":"015febf943052ecf","type":"change","z":"2990f23c277c4133","name":"append png_header to the png_data","rules":[{"t":"set","p":"payload","pt":"msg","to":"$map($$.payload, function($v) { $v.matched } )","tot":"jsonata"},{"t":"set","p":"payload","pt":"msg","to":"$append([$$.png_header], $$.payload)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":2934.000244140625,"y":864.5,"wires":[["4575fe048ca1a720"]]},{"id":"1ae1caf03e74f76c","type":"delay","z":"2990f23c277c4133","g":"130b981dd6b18cdb","name":"","pauseType":"delay","timeout":"100","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":2347,"y":202.5,"wires":[["29e091d7169c3ceb"]]}]