[{"id":"7ecfd18f58fc6510","type":"tab","label":"[complete] when is a join complete","disabled":false,"info":"This is also a ~~potential inconsistency~~, see this [forum question](https://discourse.nodered.org/t/complete-node-msg-before-or-after-computation/96648).\n\nWhat happens here (in NodeRED v4.0.5) is that the compelte node does not receive the final array generated by the join node. Instead it receives the four messages that the join node receives from the split node.\n\nThis is desired behaviour because:\n\n> In that case this behaviour makes perfect sense: the four messages are \"completely\" handled when they become part of the output message of the join node. Hence the complete node is informed once the join node has a message that it can send on which contains those four messages.\n\n> The message that the join sends is, of course, not a message that was passed to the join node and hence something the join node has completed with, rather the join node has started that message. Hence that does not go to the complete node.\n\n[From](https://discourse.nodered.org/t/complete-node-msg-before-or-after-computation/96648/5).","env":[]},{"id":"cb2ad123ba3e1012","type":"junction","z":"7ecfd18f58fc6510","x":309.26970052719116,"y":789.6267687082291,"wires":[["327a792e7cdce06e"]]},{"id":"630d3f6118253704","type":"inject","z":"7ecfd18f58fc6510","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"[1,2,3,4]","payloadType":"json","x":140.5,"y":634,"wires":[["cb2ad123ba3e1012"]]},{"id":"5f57af6582d33ac7","type":"complete","z":"7ecfd18f58fc6510","name":"","scope":["b0d85e6ead9d9286"],"uncaught":false,"x":624.5,"y":562,"wires":[["8e948a0c134c4c14","8ed6cdc7aef25d5e"]]},{"id":"b0d85e6ead9d9286","type":"join","z":"7ecfd18f58fc6510","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":628.5,"y":643,"wires":[["31c312f378447bf1"]]},{"id":"327a792e7cdce06e","type":"split","z":"7ecfd18f58fc6510","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":461.5,"y":565,"wires":[["b0d85e6ead9d9286","89e9f9ae4a3718c5"]]},{"id":"8ed6cdc7aef25d5e","type":"ut-assert-success","z":"7ecfd18f58fc6510","name":"","count":"4","x":882,"y":243.5,"wires":[]},{"id":"89e9f9ae4a3718c5","type":"ut-assert-success","z":"7ecfd18f58fc6510","name":"","count":"4","x":633,"y":472.5,"wires":[]},{"id":"8e948a0c134c4c14","type":"join","z":"7ecfd18f58fc6510","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":881,"y":297,"wires":[["aaa0bfd4f046c84e"]]},{"id":"aaa0bfd4f046c84e","type":"ut-assert-values","z":"7ecfd18f58fc6510","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"[1,2,3,4]","tot":"json"}],"x":1172,"y":297,"wires":[[]]},{"id":"31c312f378447bf1","type":"ut-assert-values","z":"7ecfd18f58fc6510","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"[1,2,3,4]","tot":"json"}],"x":976,"y":643,"wires":[[]]}]