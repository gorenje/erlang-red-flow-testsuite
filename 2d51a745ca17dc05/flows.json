[{"id":"2d51a745ca17dc05","type":"tab","label":"[.docu] Erlang-Red startup","disabled":false,"info":"## Diagramification of the Erlang-Red flow startup\n\nVisual descrption of [ered_startup](https://github.com/gorenje/erlang-red/blob/82075b02258dfb31a566213c168c890c4564dafd/src/ered_startup.erl) module, the centralised flow creation time module for spinning up all processes defining a flow.\n\n*Background*: Each node of a flow is represented by Erlang processes (or multiple processes) and each node process is independent of all other node processes. Processes only know where to send their output messages to.\n\nRemember Erlang-Red is mimicing how Node-RED works, which is [advantageous](https://blog.openmindmap.org/erlang-red#erlang-red%3A-visual-flow-based-programming-for-erlang) (implicit learnings are onboarded) and unfavorable for features that are unsuited to Erlang. Flow startup process contains much logic that only makes sense if one understands the working of Node-RED flows.\n\nThis description does not describe the [services](https://github.com/gorenje/erlang-red/blob/82075b02258dfb31a566213c168c890c4564dafd/src/erlang_red_sup.erl) started by Erlang-Red as an Erlang process. This descrption focuses solely on the initialisation of Erlang-Red flows when they are deployed or initially created.\n\n## Visual Terminology\n\n\n\n## Diagram 1 of 2\n\n```mermaid\n%% Generated by the Flow2UML Node @ https://flowhub.org/flow2uml\n%% change direction to LR for Node-RED left-to-right UML\ngraph LR\n647f1caf18f4e461@{ shape: \"braces\", label: \"Outside World\" } -- \"create_pids_for_nodes#47;2\" --> cd65242359acde9d@{ shape: \"doc\", label: \"ered_startup.erl\" }\ncd65242359acde9d@{ shape: \"doc\", label: \"ered_startup.erl\" } -- \"**#40;1#41;** call_to\" --> f7b57f5fa2684033@{ shape: \"text\", label: \"store_config_nodes#47;2\" }\ncd65242359acde9d@{ shape: \"doc\", label: \"ered_startup.erl\" } -- \"**#40;2#41;** call_to\" --> 06d71e4d226a0b66@{ shape: \"text\", label: \"install_module_node_code#47;2\" }\ncd65242359acde9d@{ shape: \"doc\", label: \"ered_startup.erl\" } -- \"**#40;3#41;** call_to\" --> 6f2a3728abcf40e8@{ shape: \"text\", label: \"extract_supervisors#47;1\" }\ncd65242359acde9d@{ shape: \"doc\", label: \"ered_startup.erl\" } -- \"**#40;4#41;** call_to\" --> 4b74abd49857f467@{ shape: \"text\", label: \"supervisor_filter_nodes#47;5\" }\ncd65242359acde9d@{ shape: \"doc\", label: \"ered_startup.erl\" } -- \"**#40;5#41;** call_to\" --> 993f43fc0fd83c72@{ shape: \"text\", label: \"create_pids_for_nodes#47;3\" }\nf7b57f5fa2684033@{ shape: \"text\", label: \"store_config_nodes#47;2\" } -- \"store_config_node\" --> deebe7665f77dc9a@{ shape: \"lin-cyl\", label: \"ered_config_store \\n &lt;gen_server&gt;\" }\n06d71e4d226a0b66@{ shape: \"text\", label: \"install_module_node_code#47;2\" } -- \"install#47;2\" --> b8a1bc7329daec62@{ shape: \"notch-rect\", label: \"ered_node_erlmodule\" }\n6f2a3728abcf40e8@{ shape: \"text\", label: \"extract_supervisors#47;1\" } == \"Supervisors\" ==> cd65242359acde9d@{ shape: \"doc\", label: \"ered_startup.erl\" }\n993f43fc0fd83c72@{ shape: \"text\", label: \"create_pids_for_nodes#47;3\" } == \"Pids\" ==> 647f1caf18f4e461@{ shape: \"braces\", label: \"Outside World\" }\nsubgraph \"ered_startup:create_pids_for_nodes#47;2\"\ncd65242359acde9d\nf7b57f5fa2684033\n06d71e4d226a0b66\n6f2a3728abcf40e8\n4b74abd49857f467\n993f43fc0fd83c72\nend\n```\n\n## Diagram 2 of 2\n\n```mermaid\n%% Generated by the Flow2UML Node @ https://flowhub.org/flow2uml\n%% change direction to LR for Node-RED left-to-right UML\ngraph LR\nfd298b0409083e41@{ shape: \"text\", label: \"create_pids_for_nodes#47;3\" } -- \"call_to\" --> 7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" }\n7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" } == \"Pid\" ==> fd298b0409083e41@{ shape: \"text\", label: \"create_pids_for_nodes#47;3\" }\n7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" } -- \"**#40;1#41;** call_to\" --> 020edf6a03f5f1e1@{ shape: \"text\", label: \"node_type_to_module#47;2\" }\n7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" } -- \"**#40;2#41;** call_to\" --> 771995a172e88ca0@{ shape: \"text\", label: \"get_node_name#47;2\" }\n7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" } -- \"**#40;3#41;** call_to\" --> 5c278940932c7d45@{ shape: \"text\", label: \"clear_pg_group#40;GrpName#41;\" }\n7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" } -- \"**#40;4#41;** call_to\" --> 7c90b2efc29436de@{ shape: \"text\", label: \" Module:start#47;2\" }\n7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" } -- \"**#40;5#41;** call_to\" --> b610359d7e58d2d3@{ shape: \"text\", label: \"gen_server:call#40;Pid, #123;registered, WsName, Pid#125;#41;,\" }\n020edf6a03f5f1e1@{ shape: \"text\", label: \"node_type_to_module#47;2\" } == \"Module\" ==> 7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" }\n771995a172e88ca0@{ shape: \"text\", label: \"get_node_name#47;2\" } == \"GrpName\" ==> 7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" }\n7c90b2efc29436de@{ shape: \"text\", label: \" Module:start#47;2\" } == \"Pid\" ==> 7d549ef8f1abdf52@{ shape: \"text\", label: \"spin_up_node\" }\nsubgraph \" \"\n7d549ef8f1abdf52\n020edf6a03f5f1e1\n771995a172e88ca0\n5c278940932c7d45\n7c90b2efc29436de\nb610359d7e58d2d3\nend\n```","env":[]},{"id":"e55f8f8977682317","type":"group","z":"2d51a745ca17dc05","name":"ered_startup:create_pids_for_nodes/2","style":{"label":true},"nodes":["cd65242359acde9d","f7b57f5fa2684033","06d71e4d226a0b66","6f2a3728abcf40e8","4b74abd49857f467","993f43fc0fd83c72"],"x":493,"y":377,"w":659,"h":529},{"id":"cb362fe8a180a0e0","type":"group","z":"2d51a745ca17dc05","name":" ","style":{"label":true},"nodes":["7d549ef8f1abdf52","020edf6a03f5f1e1","771995a172e88ca0","5c278940932c7d45","7c90b2efc29436de","b610359d7e58d2d3"],"x":640.25,"y":1271.5,"w":734.5,"h":484.5},{"id":"cd65242359acde9d","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"e55f8f8977682317","name":"ered_startup.erl","shape":"doc","wirecfgs":[{"name":"**(1)** call_to","id":"f7b57f5fa2684033","arrow":"-->"},{"name":"**(5)** call_to","id":"993f43fc0fd83c72","arrow":"-->"},{"name":"**(3)** call_to","id":"6f2a3728abcf40e8","arrow":"-->"},{"name":"**(4)** call_to","id":"4b74abd49857f467","arrow":"-->"},{"name":"**(2)** call_to","id":"06d71e4d226a0b66","arrow":"-->"}],"x":599,"y":418,"wires":[["f7b57f5fa2684033","06d71e4d226a0b66","6f2a3728abcf40e8","4b74abd49857f467","993f43fc0fd83c72"]]},{"id":"f7b57f5fa2684033","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"e55f8f8977682317","name":"store_config_nodes/2","shape":"text","wirecfgs":[{"name":"store_config_node","id":"deebe7665f77dc9a","arrow":"-->"}],"x":986,"y":418,"wires":[["deebe7665f77dc9a"]]},{"id":"deebe7665f77dc9a","type":"mermaid-flowchart","z":"2d51a745ca17dc05","name":"ered_config_store \\n <gen_server>","shape":"lin-cyl","wirecfgs":[],"x":1378,"y":418,"wires":[[]]},{"id":"06d71e4d226a0b66","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"e55f8f8977682317","name":"install_module_node_code/2","shape":"text","wirecfgs":[{"name":"install/2","id":"b8a1bc7329daec62","arrow":"-->"}],"x":1006,"y":538,"wires":[["b8a1bc7329daec62"]]},{"id":"647f1caf18f4e461","type":"mermaid-flowchart","z":"2d51a745ca17dc05","name":"Outside World","shape":"braces","wirecfgs":[{"name":"create_pids_for_nodes/2","id":"cd65242359acde9d","arrow":"-->"}],"x":285,"y":418,"wires":[["cd65242359acde9d"]]},{"id":"b8a1bc7329daec62","type":"mermaid-flowchart","z":"2d51a745ca17dc05","name":"ered_node_erlmodule","shape":"notch-rect","wirecfgs":[],"x":1388,"y":535,"wires":[[]]},{"id":"6f2a3728abcf40e8","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"e55f8f8977682317","name":"extract_supervisors/1","shape":"text","wirecfgs":[{"name":"Supervisors","id":"cd65242359acde9d","arrow":"==>"}],"x":986,"y":658,"wires":[["cd65242359acde9d"]]},{"id":"4b74abd49857f467","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"e55f8f8977682317","name":"supervisor_filter_nodes/5","shape":"text","wirecfgs":[],"x":996,"y":778,"wires":[[]]},{"id":"993f43fc0fd83c72","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"e55f8f8977682317","name":"create_pids_for_nodes/3","shape":"text","wirecfgs":[{"name":"defintion of","id":"fd298b0409083e41","arrow":"--"},{"name":"Pids","id":"647f1caf18f4e461","arrow":"==>"}],"x":1000,"y":865,"wires":[["647f1caf18f4e461"]]},{"id":"fd298b0409083e41","type":"mermaid-flowchart","z":"2d51a745ca17dc05","name":"create_pids_for_nodes/3","shape":"text","wirecfgs":[{"name":"call_to","id":"7d549ef8f1abdf52","arrow":"-->"}],"x":732.5,"y":1135,"wires":[["7d549ef8f1abdf52"]]},{"id":"7d549ef8f1abdf52","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"cb362fe8a180a0e0","name":"spin_up_node","shape":"text","wirecfgs":[{"name":"Pid","id":"fd298b0409083e41","arrow":"==>"},{"name":"**(5)** call_to","id":"b610359d7e58d2d3","arrow":"-->"},{"name":"**(4)** call_to","id":"7c90b2efc29436de","arrow":"-->"},{"name":"**(2)** call_to","id":"771995a172e88ca0","arrow":"-->"},{"name":"**(3)** call_to","id":"5c278940932c7d45","arrow":"-->"},{"name":"**(1)** call_to","id":"020edf6a03f5f1e1","arrow":"-->"}],"x":746.25,"y":1312.5,"wires":[["fd298b0409083e41","020edf6a03f5f1e1","771995a172e88ca0","5c278940932c7d45","7c90b2efc29436de","b610359d7e58d2d3"]]},{"id":"020edf6a03f5f1e1","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"cb362fe8a180a0e0","name":"node_type_to_module/2","shape":"text","wirecfgs":[{"name":"Module","id":"7d549ef8f1abdf52","arrow":"==>"}],"x":1091.25,"y":1312.5,"wires":[["7d549ef8f1abdf52"]]},{"id":"771995a172e88ca0","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"cb362fe8a180a0e0","name":"get_node_name/2","shape":"text","wirecfgs":[{"name":"GrpName","id":"7d549ef8f1abdf52","arrow":"==>"}],"x":1077.5,"y":1430,"wires":[["7d549ef8f1abdf52"]]},{"id":"5c278940932c7d45","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"cb362fe8a180a0e0","name":"clear_pg_group(GrpName)","shape":"text","wirecfgs":[],"x":1110,"y":1527.5,"wires":[[]]},{"id":"7c90b2efc29436de","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"cb362fe8a180a0e0","name":" Module:start/2","shape":"text","wirecfgs":[{"name":"Pid","id":"7d549ef8f1abdf52","arrow":"==>"}],"x":1071.25,"y":1621.25,"wires":[["7d549ef8f1abdf52"]]},{"id":"b610359d7e58d2d3","type":"mermaid-flowchart","z":"2d51a745ca17dc05","g":"cb362fe8a180a0e0","name":"gen_server:call(Pid, {registered, WsName, Pid}),","shape":"text","wirecfgs":[],"x":1168.75,"y":1715,"wires":[[]]}]