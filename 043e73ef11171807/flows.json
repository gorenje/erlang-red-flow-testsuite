[{"id":"043e73ef11171807","type":"tab","label":"[.breadboard] import HN story as nodes","disabled":false,"info":"## Importing a story tree from Hacker News\n\nThis is the same flow as described over at the [Node-RED forum](https://discourse.nodered.org/t/hacker-news-stories-as-trees/99236) only that it imports templates and not mind map nodes.\n\nA second change was removing the `headers` attribut from the message before looping over to the http request ndoe - Erlang-Red (at time of writing) does not support headers for http requests and this produced an unncessary warning.\n\n## Why?\n\nBecause HN stories have a natural tree structure but are shown as a long list of sub-comments, sub-sub-comments ... with indentation.\n\nA more natural visualisation - for me - is a as a tree of comments on comments. \n\nSee the Node-RED forum discussion for a visualisation of how that looks like in Node-RED.\n","env":[{"name":"ERED_PENDING","value":"true","type":"bool"}]},{"id":"e54bfbb57d7d40f5","type":"group","z":"043e73ef11171807","name":"right alignment - highlight generated nodes and click inject here","style":{"label":true},"nodes":["8c5b06d50de363ff","1c80ebbd0ede710c","0e2600a6ce8df6b4"],"x":517,"y":141,"w":558,"h":82},{"id":"752ea3b8e5986228","type":"inject","z":"043e73ef11171807","name":"","props":[{"p":"payload2","v":"45406090","vt":"str"},{"p":"comment","v":"45442122","vt":"str"},{"p":"autcisti","v":"45438346","vt":"str"},{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"45438346","payloadType":"str","x":175,"y":208,"wires":[["4acf4527c64ef2c5"]]},{"id":"4acf4527c64ef2c5","type":"change","z":"043e73ef11171807","name":"","rules":[{"t":"set","p":"storyid","pt":"msg","to":"payload","tot":"msg"},{"t":"set","p":"url","pt":"msg","to":"\"https://hacker-news.firebaseio.com/v0/item/\" & $$.storyid & \".json?print=pretty\"","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":401,"y":511,"wires":[["18c0f30926c76bc9"]]},{"id":"8846d85de1bcc165","type":"split","z":"043e73ef11171807","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":1719,"y":509,"wires":[["4acf4527c64ef2c5"]]},{"id":"18c0f30926c76bc9","type":"http request","z":"043e73ef11171807","name":"","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":592,"y":291,"wires":[["98ff12c452745706"]]},{"id":"5de1ce559efcc054","type":"change","z":"043e73ef11171807","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"children","tot":"msg"},{"t":"delete","p":"headers","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1422,"y":284,"wires":[["8846d85de1bcc165"]]},{"id":"6e2bc30d1b919ba5","type":"change","z":"043e73ef11171807","name":"","rules":[{"t":"set","p":"parentId","pt":"msg","to":"myNodeId","tot":"msg"},{"t":"set","p":"payload","pt":"msg","to":"children","tot":"msg"},{"t":"delete","p":"headers","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1422,"y":509,"wires":[["8846d85de1bcc165"]]},{"id":"98ff12c452745706","type":"switch","z":"043e73ef11171807","name":"story or comment?","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"story","vt":"str"},{"t":"eq","v":"comment","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":803,"y":291,"wires":[["c7e2636763fe5761"],["5fa9e892a808ec51"]]},{"id":"c7e2636763fe5761","type":"ClientCode","z":"043e73ef11171807","name":"prepare story node.","clientcode":"let parentNodeId = RED.nodes.id();\n\nmsg.children = msg.payload.kids;\n\nmsg.payload = [{\n    \"id\": parentNodeId,\n    \"type\": \"template\",\n    \"name\": msg.payload.title,\n    \"info\": (msg.payload.url || \"*No Url*\") + \"\\n\\n\" + (msg.payload.text || \"*No Text*\") + \"\\n\\n-- https://news.ycombinator.com/user?id=\" + msg.payload.by + \"\\n\\nSource: https://news.ycombinator.com/item?id=\" + msg.payload.id,\n    \"sumPass\": false,\n    \"sumPassPrio\": 0,\n    \"sumPassNodeId\": \"\",\n    \"createdAt\": (new Date(msg.payload.time * 1000)).toISOString(), // (new Date()).toISOString(),\n    \"updatedAt\": (new Date()).toISOString(),\n    \"wires\": [\n        []\n    ],\n    \"icon\": \"@gorenje/node-red-mindmap/hn.svg\"\n    // \"l\": false -- show the label for the toplevel story node\n}]\n\nmsg.parentId = parentNodeId;\n\nnode.send(msg)\n","format":"javascript","x":1103,"y":284,"wires":[["0636d62671a4a782","5de1ce559efcc054"]]},{"id":"ce597d517d3af8fd","type":"ClientCode","z":"043e73ef11171807","name":"link to story/comment","clientcode":"let source = RED.nodes.node(msg.parentId)\nlet target = RED.nodes.node(msg.myNodeId)\n\nif ( source && target ) {\n    RED.nodes.addLink({ source: source, sourcePort: 0, target: target });\n    RED.view.select([target, source]);\n}\n\nnode.send(msg)\n","format":"javascript","x":1103,"y":340.33333333333337,"wires":[["6e2bc30d1b919ba5"]]},{"id":"5fa9e892a808ec51","type":"switch","z":"043e73ef11171807","name":"not dead","property":"payload.dead","propertyType":"msg","rules":[{"t":"false"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":803,"y":345,"wires":[["b53467c717790ab8"],["b53467c717790ab8"]]},{"id":"0636d62671a4a782","type":"ClientCode","z":"043e73ef11171807","name":"import nodes","clientcode":"/*\nlet nde = [\n    {\n        \"id\": RED.nodes.id(),\n        \"type\": \"Bookmark\",\n        \"name\": \"Bookmark\",\n        \"info\": \"https://hacker-news.firebaseio.com/v0/item/45438346.json?print=pretty\\n\\n\",\n        \"sumPass\": false,\n        \"sumPassPrio\": 0,\n        \"sumPassNodeId\": \"\",\n        \"createdAt\": \"2025-10-02T07:00:08.553Z\",\n        \"updatedAt\": \"2025-10-02T07:00:08.553Z\",\n        \"x\": 588,\n        \"y\": 247,\n        \"wires\": [\n            []\n        ],\n        \"icon\": \"@gorenje/node-red-mindmap/hn.svg\"\n    }\n]\n*/\n\nlet nde = msg.payload;\n\nRED.view.importNodes(Array.isArray(nde) ? nde : [nde])\n\nnode.send(msg)\n","format":"javascript","x":1412,"y":208,"wires":[[]]},{"id":"2a677cc320235746","type":"ClientCode","z":"043e73ef11171807","name":"import nodes","clientcode":"let nde = msg.payload;\n\nRED.view.importNodes(Array.isArray(nde) ? nde : [nde])\n\nnode.send(msg)\n","format":"javascript","x":1103,"y":396.66666666666674,"wires":[["ce597d517d3af8fd"]]},{"id":"b53467c717790ab8","type":"switch","z":"043e73ef11171807","name":"not deleted","property":"payload.deleted","propertyType":"msg","rules":[{"t":"false"},{"t":"null"}],"checkall":"true","repair":false,"outputs":2,"x":803,"y":399,"wires":[["5a16e03d1724667c"],["5a16e03d1724667c"]]},{"id":"b32ed12fe4aee645","type":"ClientCode","z":"043e73ef11171807","name":"prepare comment node.","clientcode":"\nlet myNodeId = RED.nodes.id();\n\nmsg.children = msg.payload.kids;\n\nmsg.payload = [{\n    \"id\": myNodeId,\n    \"type\": \"template\",\n    \"name\": msg.payload.text.substr(0, 30) + (msg.payload.text.length > 30 ? \"...\" : \"\"),\n    \"info\": msg.payload.text + \"\\n\\n-- https://news.ycombinator.com/user?id=\" + msg.payload.by + \"\\n\\nSource: https://news.ycombinator.com/item?id=\" + msg.payload.id,\n    \"sumPass\": false,\n    \"sumPassPrio\": 0,\n    \"sumPassNodeId\": \"\",\n    \"createdAt\": (new Date(msg.payload.time * 1000)).toISOString(), // (new Date()).toISOString(),\n    \"updatedAt\": (new Date()).toISOString(),\n    \"wires\": [\n        []\n    ],\n    // \"icon\": \"@gorenje/node-red-mindmap/hn.svg\", -- leave the icon as comment - their all linked anyway\n    \"l\": false\n}]\n\nmsg.myNodeId = myNodeId;\n\nnode.send(msg)\n","format":"javascript","x":1103,"y":453,"wires":[["2a677cc320235746"]]},{"id":"5a16e03d1724667c","type":"switch","z":"043e73ef11171807","name":"not flagged","property":"payload.text","propertyType":"msg","rules":[{"t":"neq","v":"[flagged]","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":803,"y":453,"wires":[["b32ed12fe4aee645"]]},{"id":"8c5b06d50de363ff","type":"ClientCode","z":"043e73ef11171807","g":"e54bfbb57d7d40f5","name":"do alignment","clientcode":"let cfg = {\n    \"algorithm\": \"org.eclipse.elk.layered\",\n    \"elk.direction\": \"RIGHT\",\n    \"cycleBreaking.strategy\": \"INTERACTIVE\",\n    \"layering.strategy\": \"INTERACTIVE\",\n    \"crossingMinimization.semiInteractive\": true,\n    \"separateConnectedComponents\": true,\n    \"nodePlacement.strategy\": \"NETWORK_SIMPLEX\",\n    \"spacing.nodeNode\": 10,\n    \"spacing.nodeNodeBetweenLayers\": 10,\n    \"spacing.edgeNode\": 10,\n    \"spacing.edgeNodeBetweenLayers\": 10,\n    \"spacing.edgeEdge\": 10,\n    \"spacing.edgeEdgeBetweenLayers\": 10\n};\n\nfunction findSelectedNodes(/*thisNode*/) {\n    /*\n     * Take the selection and create a nodeset from it.\n     */\n    var selection = RED.view.selection();\n    var fixedNodeId = undefined;\n    var ns = undefined;\n\n    if (!selection.nodes || selection.nodes.length == 0) {\n        RED.notify(\"Select exactly one node.\");\n        return;\n    }\n\n    if (selection.nodes.length == 1) {\n        // This is not applicable for the sidebar plugin\n        //if (selection.nodes[0].id == thisNode.id || selection.nodes[0].type == thisNode.type) {\n        //    RED.notify(\"Please do not select the align node.\");\n        //    return;\n        //}\n\n        if (selection.nodes[0].type == \"group\") {\n            ns = RED.group.getNodes(selection.nodes[0])\n            if (ns.length == 0) {\n                RED.notify(\"Empty group selected, very funny.\");\n                return;\n            }\n            fixedNodeId = ns[0].id;\n        } else {\n            ns = RED.nodes.getAllFlowNodes(selection.nodes[0])\n            fixedNodeId = selection.nodes[0].id;\n        }\n    }\n\n    if (selection.nodes.length > 1) {\n        ns = []\n        for (var idx = 0; idx < selection.nodes.length; idx++) {\n            if (selection.nodes[idx].type == \"group\") {\n                ns = ns.concat(RED.group.getNodes(selection.nodes[idx]))\n            } else {\n                ns.push(selection.nodes[idx])\n                fixedNodeId ||= selection.nodes[idx].id;\n            }\n        }\n\n        fixedNodeId ||= ns[0].id;\n    }\n\n    if (!ns) {\n        RED.notify(\"No nodes selected.\");\n        return;\n    }\n\n    /* \n     * From here it's all nodeset based.\n     */\n\n    // Convert nodes to flows.json format since all the wires, i.e. links, are \n    // contained in one simple json format.\n    let fixedNode = RED.nodes.node(fixedNodeId)\n    var allnodes = RED.nodes.createExportableNodeSet(ns).filter((n) => {\n        return n.type != \"tab\" && n.type != 'subflow' && n.type != \"group\" && n.z == fixedNode.z\n    });\n\n    var alledges = [];\n    var allNodeIds = allnodes.map(d => d.id);\n\n    allnodes.forEach((n) => {\n        // Only continue if the node has wires (e.g. a ui_group has no wires)\n        if (n.wires) {\n            for (var widx = 0; widx < (n.wires || []).length; widx++) {\n                for (var xidx = 0; xidx < n.wires[widx].length; xidx++) {\n                    if (allNodeIds.indexOf(n.wires[widx][xidx]) > -1) {\n                        alledges.push({\n                            id: n.id + n.wires[widx][xidx],\n                            sources: [n.id],\n                            targets: [n.wires[widx][xidx]]\n                        });\n                    }\n                }\n            }\n        }\n    })\n\n    allnodes = allnodes.map((n) => {\n        let bbox = ((document.getElementById(n.id) && document.getElementById(n.id).getBBox && document.getElementById(n.id)) || {\n            getBBox: () => {\n                return {\n                    width: 0,\n                    height: 0\n                }\n            }\n        });\n\n        return {\n            id: n.id,\n            width: bbox.getBBox().width + 3,\n            height: bbox.getBBox().height + 3,\n        }\n    });\n\n    return {\n        allnodes: allnodes,\n        alledges: alledges,\n        fixedNodeId: fixedNodeId\n    };\n}\n\nfunction moveNodes(fixedNodeId, children) {\n    //var children = payload.nodes;\n    //var fixedNodeId = payload.fixedNodeId;\n\n    var changedNodes = [];\n\n    // Before moving anything we get the offset (x,y) - this is the amount that our\n    // fixed Node moved - our fixed node does not move, this means everything is offset\n    // by the distance it moved.\n    var offsetX = 0;\n    var offsetY = 0;\n    children.forEach((c) => {\n        if (c.id == fixedNodeId) {\n            var nd = RED.nodes.node(c.id) || RED.nodes.junction(c.id);\n            offsetX = c.x - nd.x;\n            offsetY = c.y - nd.y;\n        }\n    });\n\n    children.forEach((c) => {\n        var nd = RED.nodes.node(c.id) || RED.nodes.junction(c.id);\n\n        changedNodes.push({\n            n: nd,\n            ox: nd.x,\n            oy: nd.y,\n            moved: nd.moved\n        });\n\n        nd.x = c.x - offsetX;\n        nd.y = c.y - offsetY;\n        nd.dirty = true;\n    });\n\n    RED.history.push({ t: \"move\", nodes: changedNodes, dirty: RED.nodes.dirty() });\n    RED.nodes.dirty(true);\n    RED.view.redraw(true);\n}\n\nlet selection = findSelectedNodes();\n\nvar graph = {\n    id: \"root\",\n    layoutOptions: cfg,\n    children: selection.allnodes,\n    edges: selection.alledges\n};\n\nconst elk = new ELK();\n\nelk.layout(graph)\n    .then((g) => {\n        moveNodes(selection.fixedNodeId, g.children);\n    })\n    .catch((ex) => {\n        console.error(\"ELKjs exception moving nodes\", ex)\n        RED.notify(\"ElkJs autoroute error: \" + ex);\n    });\n\nnode.send(msg)","format":"javascript","x":979,"y":182,"wires":[[]]},{"id":"1c80ebbd0ede710c","type":"inject","z":"043e73ef11171807","g":"e54bfbb57d7d40f5","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":623,"y":182,"wires":[["0e2600a6ce8df6b4"]]},{"id":"0e2600a6ce8df6b4","type":"ClientCode","z":"043e73ef11171807","g":"e54bfbb57d7d40f5","name":"load elkjs","clientcode":"/* \n    Source:\n    https://stackoverflow.com/questions/14644558/call-javascript-function-after-script-is-loaded\n*/\nfunction loadScript(url, callback) {\n    var script = document.createElement(\"script\")\n    script.type = \"text/javascript\";\n\n    if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n                script.onreadystatechange = null;\n                callback();\n            }\n        };\n    } else {  //Others\n        script.onload = function () {\n            callback();\n        };\n    }\n\n    script.src = url;\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n}\n\nif (typeof ELK == \"undefined\") {\n    loadScript(\"https://cdn.openmindmap.org/thirdparty/elk.bundled.js\", () => {\n        node.send({\n            topic: topic,\n            payload: payload\n        })\n    })\n} else {\n    node.send({\n        topic: topic,\n        payload: payload\n    })\n}\n","format":"javascript","x":796,"y":182,"wires":[["8c5b06d50de363ff"]]}]