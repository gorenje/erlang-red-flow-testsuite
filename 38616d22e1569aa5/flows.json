[{"id":"38616d22e1569aa5","type":"tab","label":"[link nodes] link call to a dynamic link in node - by name","disabled":false,"info":"From the docu:\n\n```\nWhen the option Link Type is set to \"Dynamic target\" msg.target can be used to call a link in by name or id.\n\n    1. If there is a link in nodes with the same id, it will be called\n    2. If there are two or more link in nodes with the same name, an error will be raised\n    3. A link call cannot call a link in node inside a subflow\n```\n\n**NOTE** this test sometimes fails for reasons unknown. Coordination between a global pg table and many link in nodes registering. Thought I fixed this by deregistering link in nodes when they stop but it seems not to work 100% of the time.\n\nThe problem might be having the flow open in the flow editor and then running the tests. That's because the flow tabs are also initialised in the backend and that could remove test registrations when the flow tab is stopped.","env":[{"name":"ERED_PENDING","type":"bool","value":"false"}]},{"id":"2750fd89f2365af8","type":"inject","z":"38616d22e1569aa5","name":"","props":[{"p":"payload"},{"p":"target","v":"link-in-node-24","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"this is the payload","payloadType":"str","x":222,"y":365,"wires":[["13d85c2359bdbd5b"]]},{"id":"750a9cb4493347ce","type":"link in","z":"38616d22e1569aa5","name":"link-in-node-24","links":[],"x":110,"y":591,"wires":[["24f7e34f5f1c1fd2"]]},{"id":"24f7e34f5f1c1fd2","type":"ut-assert-values","z":"38616d22e1569aa5","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"this is the payload","tot":"str"}],"x":281.5,"y":591,"wires":[["79d6228062b78a34"]]},{"id":"25f6b03804a0f049","type":"link out","z":"38616d22e1569aa5","name":"link out 1","mode":"return","links":[],"x":613,"y":591,"wires":[]},{"id":"13d85c2359bdbd5b","type":"link call","z":"38616d22e1569aa5","name":"call link in node","links":["750a9cb4493347ce"],"linkType":"dynamic","timeout":"30","x":445,"y":365,"wires":[["9206b968a2584c8a","424cf9ed94a604a1"]]},{"id":"9206b968a2584c8a","type":"ut-assert-values","z":"38616d22e1569aa5","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"this is the payload really","tot":"str"}],"x":657,"y":310,"wires":[[]]},{"id":"424cf9ed94a604a1","type":"ut-assert-success","z":"38616d22e1569aa5","name":"","x":632,"y":408,"wires":[]},{"id":"79d6228062b78a34","type":"change","z":"38616d22e1569aa5","name":"","rules":[{"p":"payload","pt":"msg","t":"set","to":"this is the payload really","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":480,"y":636.5,"wires":[["25f6b03804a0f049"]]}]