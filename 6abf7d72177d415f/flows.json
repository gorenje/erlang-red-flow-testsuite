[{"id":"6abf7d72177d415f","type":"tab","label":"[.jsonata] non-string key names","disabled":false,"info":"JSONata the validator in the browser supports them but the interpreter in Node-RED silently ignores them, i.e., no errors generated.\n\nErlangRED just supports them.\n\nAlso non-strings in a string concatenation is supported as the validator in the flow editor allows it but the evaluator in the backend silently ignores them again.\n\n**Note**: these tests will fail when tested in Node-RED.","env":[]},{"id":"8e9a30f78a33cce2","type":"group","z":"6abf7d72177d415f","name":"JSONata helper","style":{"label":true},"nodes":["0532da05217f91e6","02cd282b0d383c3d","bf02ba8b755a9181"],"x":437,"y":741,"w":404,"h":124},{"id":"d62704d597342a0c","type":"change","z":"6abf7d72177d415f","name":"map: single quote strings, floats and integer ","rules":[{"p":"payload","pt":"msg","t":"set","to":"{ \"key\": $toString('single quote strings'), banaint: 4, float: 1.23, key2: value }","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":526,"y":327,"wires":[["8eca1fae63ff6c3c"]]},{"id":"70b0b91dbbd7295a","type":"inject","z":"6abf7d72177d415f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":226,"y":401,"wires":[["d62704d597342a0c","3895c01857450267","d4a94c82fd1dd3f6","5e5ed6a0fe265520"]]},{"id":"3895c01857450267","type":"change","z":"6abf7d72177d415f","name":"string concatenation","rules":[{"p":"payload","pt":"msg","t":"set","to":"\"hrllo \" & \" world \" & \" 1234 \" & 10 & \" goodbye \" & \" cruel \" & world","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":371,"y":607,"wires":[["509fc0408688ce05"]]},{"id":"863c67f21d0ca4cb","type":"ut-assert-values","z":"6abf7d72177d415f","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"hrllo  world  1234 10 goodbye  cruel world","tot":"str"}],"x":957.5,"y":607,"wires":[[]]},{"id":"509fc0408688ce05","type":"link call","z":"6abf7d72177d415f","name":"","links":["0532da05217f91e6"],"linkType":"static","timeout":"30","x":674.5,"y":607,"wires":[["863c67f21d0ca4cb"]]},{"id":"0532da05217f91e6","type":"link in","z":"6abf7d72177d415f","g":"8e9a30f78a33cce2","name":"convert payload to string","links":[],"x":478,"y":824,"wires":[["02cd282b0d383c3d"]]},{"id":"02cd282b0d383c3d","type":"change","z":"6abf7d72177d415f","g":"8e9a30f78a33cce2","name":"$toString($$.payload)","rules":[{"p":"payload","pt":"msg","t":"set","to":"$toString($$.payload)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":652,"y":782,"wires":[["bf02ba8b755a9181"]],"info":"necessary because JSONata does things in lists while ErlangRED does things in binary."},{"id":"bf02ba8b755a9181","type":"link out","z":"6abf7d72177d415f","g":"8e9a30f78a33cce2","name":"link out 2","mode":"return","links":[],"x":800,"y":824,"wires":[]},{"id":"37fbda10cdc1ab05","type":"ut-assert-values","z":"6abf7d72177d415f","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"{\"float\":1.23,\"key\":\"single quote strings\",\"banaint\":4 }","tot":"json"}],"x":927,"y":259,"wires":[[]]},{"id":"8eca1fae63ff6c3c","type":"change","z":"6abf7d72177d415f","name":"can't test for atoms","rules":[{"p":"payload.key2","pt":"msg","t":"delete"}],"action":"","property":"","from":"","to":"","reg":false,"x":776,"y":383,"wires":[["37fbda10cdc1ab05"]]},{"id":"d4a94c82fd1dd3f6","type":"change","z":"6abf7d72177d415f","name":"map: single quote strings, floats and integer ","rules":[{"p":"payload","pt":"msg","t":"set","to":"{ \"key\": 'single quote strings', banaint: 4, float: 1.23, key2: value }","tot":"jsonata"},{"p":"payload.key","pt":"msg","t":"set","to":"$string($$.payload.key)","tot":"jsonata"},{"p":"payload.key2","pt":"msg","t":"set","to":"$string($$.payload.key2)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":529,"y":488,"wires":[["fa9fea0855e16bae"]]},{"id":"5e5ed6a0fe265520","type":"change","z":"6abf7d72177d415f","name":"map: single quote strings, floats and integer ","rules":[{"p":"payload","pt":"msg","t":"set","to":"{ \"key\": $string('single quote strings'), banaint: 4, float: 1.23, key2: $string(value) }","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":474,"y":210,"wires":[["62330de258e5cea7"]]},{"id":"62330de258e5cea7","type":"ut-assert-values","z":"6abf7d72177d415f","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"{\"float\":1.23,\"key\":\"single quote strings\",\"banaint\":4, \"key2\": \"value\" }","tot":"json"}],"x":762,"y":125,"wires":[[]]},{"id":"fa9fea0855e16bae","type":"ut-assert-values","z":"6abf7d72177d415f","name":"","rules":[{"p":"payload","pt":"msg","t":"eql","to":"{\"float\":1.23,\"key\":\"single quote strings\",\"banaint\":4, \"key2\": \"value\" }","tot":"json"}],"x":1009,"y":430,"wires":[[]]}]